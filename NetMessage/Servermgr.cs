// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: servermgr.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Suresecureivs {

  /// <summary>Holder for reflection information generated from servermgr.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ServermgrReflection {

    #region Descriptor
    /// <summary>File descriptor for servermgr.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServermgrReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9zZXJ2ZXJtZ3IucHJvdG8SDXN1cmVzZWN1cmVpdnMioAEKCE1zZ1JlcGx5",
            "EhEKCUVycm9yQ29kZRgBIAEoBRIOCgZNc2d0eHQYAiABKAkSOAoLTmV4dE9w",
            "ZXJhdGUYAyABKA4yIy5zdXJlc2VjdXJlaXZzLk1zZ1JlcGx5Lk9wZXJhdGVU",
            "eXBlIjcKC09wZXJhdGVUeXBlEggKBE5vbmUQABIOCgpHZXREZXZpY2VzEAES",
            "DgoKR2V0Q2xpZW50cxACIo4BCgdNc2dJbmZvEg4KBk1zZ3R4dBgBIAEoCRIx",
            "CgZTb3VyY2UYAiABKA4yIS5zdXJlc2VjdXJlaXZzLk1zZ0luZm8uU291cmNl",
            "VHlwZRINCgVjb2xvchgDIAEoCSIxCgpTb3VyY2VUeXBlEgoKBkRldmljZRAA",
            "EgoKBkNsaWVudBABEgsKB1NlcnZpY2UQAiKeAQoJU3ZyRGV2aWNlEhAKCFVu",
            "aXROYW1lGAEgASgJEg8KB0Rldkhvc3QYAiABKAkSEwoLQ29ubmVjdFRpbWUY",
            "AyABKAkSMgoJRGV2U3RhdHVzGAQgASgOMh8uc3VyZXNlY3VyZWl2cy5TdnJE",
            "ZXZpY2UuU3RhdHVzIiUKBlN0YXR1cxILCgdDb25uZWN0EAASDgoKRGlzY29u",
            "bmVjdBABIkwKDFN2ckRldmljZUFsbBIRCglSZXBseVRpbWUYASABKAkSKQoH",
            "RGV2aWNlcxgCIAMoCzIYLnN1cmVzZWN1cmVpdnMuU3ZyRGV2aWNlIp8BCglT",
            "dnJDbGllbnQSEAoIVXNlck5hbWUYASABKAkSEAoIRW5kUG9pbnQYAiABKAkS",
            "EwoLQ29ubmVjdFRpbWUYAyABKAkSMgoJQ2l0U3RhdHVzGAQgASgOMh8uc3Vy",
            "ZXNlY3VyZWl2cy5TdnJDbGllbnQuU3RhdHVzIiUKBlN0YXR1cxILCgdDb25u",
            "ZWN0EAASDgoKRGlzY29ubmVjdBABIkwKDFN2ckNsaWVudEFsbBIRCglSZXBs",
            "eVRpbWUYASABKAkSKQoHQ2xpZW50cxgCIAMoCzIYLnN1cmVzZWN1cmVpdnMu",
            "U3ZyQ2xpZW50MvMCCg1TZXJ2aWNlTm90aWNlEkkKEkRldmljZVN0YXR1c0No",
            "YW5nZRIYLnN1cmVzZWN1cmVpdnMuU3ZyRGV2aWNlGhcuc3VyZXNlY3VyZWl2",
            "cy5Nc2dSZXBseSIAEkkKEkNsaWVudFN0YXR1c0NoYW5nZRIYLnN1cmVzZWN1",
            "cmVpdnMuU3ZyQ2xpZW50Ghcuc3VyZXNlY3VyZWl2cy5Nc2dSZXBseSIAEkUK",
            "C0RldmljZXNMaXN0Ehsuc3VyZXNlY3VyZWl2cy5TdnJEZXZpY2VBbGwaFy5z",
            "dXJlc2VjdXJlaXZzLk1zZ1JlcGx5IgASRQoLQ2xpZW50c0xpc3QSGy5zdXJl",
            "c2VjdXJlaXZzLlN2ckNsaWVudEFsbBoXLnN1cmVzZWN1cmVpdnMuTXNnUmVw",
            "bHkiABI+CglPbk1lc3NhZ2USFi5zdXJlc2VjdXJlaXZzLk1zZ0luZm8aFy5z",
            "dXJlc2VjdXJlaXZzLk1zZ1JlcGx5IgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.MsgReply), global::Suresecureivs.MsgReply.Parser, new[]{ "ErrorCode", "Msgtxt", "NextOperate" }, null, new[]{ typeof(global::Suresecureivs.MsgReply.Types.OperateType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.MsgInfo), global::Suresecureivs.MsgInfo.Parser, new[]{ "Msgtxt", "Source", "Color" }, null, new[]{ typeof(global::Suresecureivs.MsgInfo.Types.SourceType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.SvrDevice), global::Suresecureivs.SvrDevice.Parser, new[]{ "UnitName", "DevHost", "ConnectTime", "DevStatus" }, null, new[]{ typeof(global::Suresecureivs.SvrDevice.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.SvrDeviceAll), global::Suresecureivs.SvrDeviceAll.Parser, new[]{ "ReplyTime", "Devices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.SvrClient), global::Suresecureivs.SvrClient.Parser, new[]{ "UserName", "EndPoint", "ConnectTime", "CitStatus" }, null, new[]{ typeof(global::Suresecureivs.SvrClient.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Suresecureivs.SvrClientAll), global::Suresecureivs.SvrClientAll.Parser, new[]{ "ReplyTime", "Clients" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgReply : pb::IMessage<MsgReply> {
    private static readonly pb::MessageParser<MsgReply> _parser = new pb::MessageParser<MsgReply>(() => new MsgReply());
    public static pb::MessageParser<MsgReply> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MsgReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MsgReply(MsgReply other) : this() {
      errorCode_ = other.errorCode_;
      msgtxt_ = other.msgtxt_;
      nextOperate_ = other.nextOperate_;
    }

    public MsgReply Clone() {
      return new MsgReply(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "Msgtxt" field.</summary>
    public const int MsgtxtFieldNumber = 2;
    private string msgtxt_ = "";
    public string Msgtxt {
      get { return msgtxt_; }
      set {
        msgtxt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NextOperate" field.</summary>
    public const int NextOperateFieldNumber = 3;
    private global::Suresecureivs.MsgReply.Types.OperateType nextOperate_ = 0;
    public global::Suresecureivs.MsgReply.Types.OperateType NextOperate {
      get { return nextOperate_; }
      set {
        nextOperate_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MsgReply);
    }

    public bool Equals(MsgReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Msgtxt != other.Msgtxt) return false;
      if (NextOperate != other.NextOperate) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (Msgtxt.Length != 0) hash ^= Msgtxt.GetHashCode();
      if (NextOperate != 0) hash ^= NextOperate.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (Msgtxt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msgtxt);
      }
      if (NextOperate != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NextOperate);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Msgtxt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msgtxt);
      }
      if (NextOperate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NextOperate);
      }
      return size;
    }

    public void MergeFrom(MsgReply other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Msgtxt.Length != 0) {
        Msgtxt = other.Msgtxt;
      }
      if (other.NextOperate != 0) {
        NextOperate = other.NextOperate;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            Msgtxt = input.ReadString();
            break;
          }
          case 24: {
            nextOperate_ = (global::Suresecureivs.MsgReply.Types.OperateType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MsgReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum OperateType {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("GetDevices")] GetDevices = 1,
        [pbr::OriginalName("GetClients")] GetClients = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgInfo : pb::IMessage<MsgInfo> {
    private static readonly pb::MessageParser<MsgInfo> _parser = new pb::MessageParser<MsgInfo>(() => new MsgInfo());
    public static pb::MessageParser<MsgInfo> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MsgInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MsgInfo(MsgInfo other) : this() {
      msgtxt_ = other.msgtxt_;
      source_ = other.source_;
      color_ = other.color_;
    }

    public MsgInfo Clone() {
      return new MsgInfo(this);
    }

    /// <summary>Field number for the "Msgtxt" field.</summary>
    public const int MsgtxtFieldNumber = 1;
    private string msgtxt_ = "";
    public string Msgtxt {
      get { return msgtxt_; }
      set {
        msgtxt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Source" field.</summary>
    public const int SourceFieldNumber = 2;
    private global::Suresecureivs.MsgInfo.Types.SourceType source_ = 0;
    public global::Suresecureivs.MsgInfo.Types.SourceType Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private string color_ = "";
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MsgInfo);
    }

    public bool Equals(MsgInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgtxt != other.Msgtxt) return false;
      if (Source != other.Source) return false;
      if (Color != other.Color) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Msgtxt.Length != 0) hash ^= Msgtxt.GetHashCode();
      if (Source != 0) hash ^= Source.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgtxt.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msgtxt);
      }
      if (Source != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Source);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Color);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Msgtxt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msgtxt);
      }
      if (Source != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      return size;
    }

    public void MergeFrom(MsgInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgtxt.Length != 0) {
        Msgtxt = other.Msgtxt;
      }
      if (other.Source != 0) {
        Source = other.Source;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Msgtxt = input.ReadString();
            break;
          }
          case 16: {
            source_ = (global::Suresecureivs.MsgInfo.Types.SourceType) input.ReadEnum();
            break;
          }
          case 26: {
            Color = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MsgInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SourceType {
        [pbr::OriginalName("Device")] Device = 0,
        [pbr::OriginalName("Client")] Client = 1,
        [pbr::OriginalName("Service")] Service = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SvrDevice : pb::IMessage<SvrDevice> {
    private static readonly pb::MessageParser<SvrDevice> _parser = new pb::MessageParser<SvrDevice>(() => new SvrDevice());
    public static pb::MessageParser<SvrDevice> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SvrDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SvrDevice(SvrDevice other) : this() {
      unitName_ = other.unitName_;
      devHost_ = other.devHost_;
      connectTime_ = other.connectTime_;
      devStatus_ = other.devStatus_;
    }

    public SvrDevice Clone() {
      return new SvrDevice(this);
    }

    /// <summary>Field number for the "UnitName" field.</summary>
    public const int UnitNameFieldNumber = 1;
    private string unitName_ = "";
    public string UnitName {
      get { return unitName_; }
      set {
        unitName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DevHost" field.</summary>
    public const int DevHostFieldNumber = 2;
    private string devHost_ = "";
    public string DevHost {
      get { return devHost_; }
      set {
        devHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectTime" field.</summary>
    public const int ConnectTimeFieldNumber = 3;
    private string connectTime_ = "";
    public string ConnectTime {
      get { return connectTime_; }
      set {
        connectTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DevStatus" field.</summary>
    public const int DevStatusFieldNumber = 4;
    private global::Suresecureivs.SvrDevice.Types.Status devStatus_ = 0;
    public global::Suresecureivs.SvrDevice.Types.Status DevStatus {
      get { return devStatus_; }
      set {
        devStatus_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SvrDevice);
    }

    public bool Equals(SvrDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitName != other.UnitName) return false;
      if (DevHost != other.DevHost) return false;
      if (ConnectTime != other.ConnectTime) return false;
      if (DevStatus != other.DevStatus) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (UnitName.Length != 0) hash ^= UnitName.GetHashCode();
      if (DevHost.Length != 0) hash ^= DevHost.GetHashCode();
      if (ConnectTime.Length != 0) hash ^= ConnectTime.GetHashCode();
      if (DevStatus != 0) hash ^= DevStatus.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (UnitName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UnitName);
      }
      if (DevHost.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DevHost);
      }
      if (ConnectTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConnectTime);
      }
      if (DevStatus != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) DevStatus);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (UnitName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitName);
      }
      if (DevHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevHost);
      }
      if (ConnectTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectTime);
      }
      if (DevStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DevStatus);
      }
      return size;
    }

    public void MergeFrom(SvrDevice other) {
      if (other == null) {
        return;
      }
      if (other.UnitName.Length != 0) {
        UnitName = other.UnitName;
      }
      if (other.DevHost.Length != 0) {
        DevHost = other.DevHost;
      }
      if (other.ConnectTime.Length != 0) {
        ConnectTime = other.ConnectTime;
      }
      if (other.DevStatus != 0) {
        DevStatus = other.DevStatus;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UnitName = input.ReadString();
            break;
          }
          case 18: {
            DevHost = input.ReadString();
            break;
          }
          case 26: {
            ConnectTime = input.ReadString();
            break;
          }
          case 32: {
            devStatus_ = (global::Suresecureivs.SvrDevice.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SvrDevice message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("Connect")] Connect = 0,
        [pbr::OriginalName("Disconnect")] Disconnect = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SvrDeviceAll : pb::IMessage<SvrDeviceAll> {
    private static readonly pb::MessageParser<SvrDeviceAll> _parser = new pb::MessageParser<SvrDeviceAll>(() => new SvrDeviceAll());
    public static pb::MessageParser<SvrDeviceAll> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SvrDeviceAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SvrDeviceAll(SvrDeviceAll other) : this() {
      replyTime_ = other.replyTime_;
      devices_ = other.devices_.Clone();
    }

    public SvrDeviceAll Clone() {
      return new SvrDeviceAll(this);
    }

    /// <summary>Field number for the "ReplyTime" field.</summary>
    public const int ReplyTimeFieldNumber = 1;
    private string replyTime_ = "";
    public string ReplyTime {
      get { return replyTime_; }
      set {
        replyTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Devices" field.</summary>
    public const int DevicesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Suresecureivs.SvrDevice> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(18, global::Suresecureivs.SvrDevice.Parser);
    private readonly pbc::RepeatedField<global::Suresecureivs.SvrDevice> devices_ = new pbc::RepeatedField<global::Suresecureivs.SvrDevice>();
    public pbc::RepeatedField<global::Suresecureivs.SvrDevice> Devices {
      get { return devices_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SvrDeviceAll);
    }

    public bool Equals(SvrDeviceAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReplyTime != other.ReplyTime) return false;
      if(!devices_.Equals(other.devices_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ReplyTime.Length != 0) hash ^= ReplyTime.GetHashCode();
      hash ^= devices_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ReplyTime.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReplyTime);
      }
      devices_.WriteTo(output, _repeated_devices_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (ReplyTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyTime);
      }
      size += devices_.CalculateSize(_repeated_devices_codec);
      return size;
    }

    public void MergeFrom(SvrDeviceAll other) {
      if (other == null) {
        return;
      }
      if (other.ReplyTime.Length != 0) {
        ReplyTime = other.ReplyTime;
      }
      devices_.Add(other.devices_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ReplyTime = input.ReadString();
            break;
          }
          case 18: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SvrClient : pb::IMessage<SvrClient> {
    private static readonly pb::MessageParser<SvrClient> _parser = new pb::MessageParser<SvrClient>(() => new SvrClient());
    public static pb::MessageParser<SvrClient> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SvrClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SvrClient(SvrClient other) : this() {
      userName_ = other.userName_;
      endPoint_ = other.endPoint_;
      connectTime_ = other.connectTime_;
      citStatus_ = other.citStatus_;
    }

    public SvrClient Clone() {
      return new SvrClient(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndPoint" field.</summary>
    public const int EndPointFieldNumber = 2;
    private string endPoint_ = "";
    public string EndPoint {
      get { return endPoint_; }
      set {
        endPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectTime" field.</summary>
    public const int ConnectTimeFieldNumber = 3;
    private string connectTime_ = "";
    public string ConnectTime {
      get { return connectTime_; }
      set {
        connectTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CitStatus" field.</summary>
    public const int CitStatusFieldNumber = 4;
    private global::Suresecureivs.SvrClient.Types.Status citStatus_ = 0;
    public global::Suresecureivs.SvrClient.Types.Status CitStatus {
      get { return citStatus_; }
      set {
        citStatus_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as SvrClient);
    }

    public bool Equals(SvrClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (EndPoint != other.EndPoint) return false;
      if (ConnectTime != other.ConnectTime) return false;
      if (CitStatus != other.CitStatus) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (EndPoint.Length != 0) hash ^= EndPoint.GetHashCode();
      if (ConnectTime.Length != 0) hash ^= ConnectTime.GetHashCode();
      if (CitStatus != 0) hash ^= CitStatus.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (EndPoint.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndPoint);
      }
      if (ConnectTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConnectTime);
      }
      if (CitStatus != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CitStatus);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (EndPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndPoint);
      }
      if (ConnectTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectTime);
      }
      if (CitStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CitStatus);
      }
      return size;
    }

    public void MergeFrom(SvrClient other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.EndPoint.Length != 0) {
        EndPoint = other.EndPoint;
      }
      if (other.ConnectTime.Length != 0) {
        ConnectTime = other.ConnectTime;
      }
      if (other.CitStatus != 0) {
        CitStatus = other.CitStatus;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            EndPoint = input.ReadString();
            break;
          }
          case 26: {
            ConnectTime = input.ReadString();
            break;
          }
          case 32: {
            citStatus_ = (global::Suresecureivs.SvrClient.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SvrClient message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("Connect")] Connect = 0,
        [pbr::OriginalName("Disconnect")] Disconnect = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SvrClientAll : pb::IMessage<SvrClientAll> {
    private static readonly pb::MessageParser<SvrClientAll> _parser = new pb::MessageParser<SvrClientAll>(() => new SvrClientAll());
    public static pb::MessageParser<SvrClientAll> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Suresecureivs.ServermgrReflection.Descriptor.MessageTypes[5]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public SvrClientAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    public SvrClientAll(SvrClientAll other) : this() {
      replyTime_ = other.replyTime_;
      clients_ = other.clients_.Clone();
    }

    public SvrClientAll Clone() {
      return new SvrClientAll(this);
    }

    /// <summary>Field number for the "ReplyTime" field.</summary>
    public const int ReplyTimeFieldNumber = 1;
    private string replyTime_ = "";
    public string ReplyTime {
      get { return replyTime_; }
      set {
        replyTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Clients" field.</summary>
    public const int ClientsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Suresecureivs.SvrClient> _repeated_clients_codec
        = pb::FieldCodec.ForMessage(18, global::Suresecureivs.SvrClient.Parser);
    private readonly pbc::RepeatedField<global::Suresecureivs.SvrClient> clients_ = new pbc::RepeatedField<global::Suresecureivs.SvrClient>();
    public pbc::RepeatedField<global::Suresecureivs.SvrClient> Clients {
      get { return clients_; }
    }

    public override bool Equals(object other) {
      return Equals(other as SvrClientAll);
    }

    public bool Equals(SvrClientAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReplyTime != other.ReplyTime) return false;
      if(!clients_.Equals(other.clients_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ReplyTime.Length != 0) hash ^= ReplyTime.GetHashCode();
      hash ^= clients_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ReplyTime.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReplyTime);
      }
      clients_.WriteTo(output, _repeated_clients_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (ReplyTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyTime);
      }
      size += clients_.CalculateSize(_repeated_clients_codec);
      return size;
    }

    public void MergeFrom(SvrClientAll other) {
      if (other == null) {
        return;
      }
      if (other.ReplyTime.Length != 0) {
        ReplyTime = other.ReplyTime;
      }
      clients_.Add(other.clients_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ReplyTime = input.ReadString();
            break;
          }
          case 18: {
            clients_.AddEntriesFrom(input, _repeated_clients_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
