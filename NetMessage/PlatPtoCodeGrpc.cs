// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlatPtoCode.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace PlatPtoCode {
  public static class PlatService
  {
    static readonly string __ServiceName = "PlatPtoCode.PlatService";

    static readonly Marshaller<global::PlatPtoCode.PtoEventResult> __Marshaller_PtoEventResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoEventResult.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoReturn> __Marshaller_PtoReturn = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoReturn.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoLoginInfo> __Marshaller_PtoLoginInfo = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoLoginInfo.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoLoginReturn> __Marshaller_PtoLoginReturn = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoLoginReturn.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoLogout> __Marshaller_PtoLogout = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoLogout.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoHeart> __Marshaller_PtoHeart = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoHeart.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoEvent> __Marshaller_PtoEvent = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoEvent.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoVerImage> __Marshaller_PtoVerImage = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoVerImage.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoVerReturn> __Marshaller_PtoVerReturn = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoVerReturn.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoHostEndpoint> __Marshaller_PtoHostEndpoint = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoHostEndpoint.Parser.ParseFrom);

    static readonly Method<global::PlatPtoCode.PtoEventResult, global::PlatPtoCode.PtoReturn> __Method_AlarmDisposal = new Method<global::PlatPtoCode.PtoEventResult, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmDisposal",
        __Marshaller_PtoEventResult,
        __Marshaller_PtoReturn);

    static readonly Method<global::PlatPtoCode.PtoLoginInfo, global::PlatPtoCode.PtoLoginReturn> __Method_Login = new Method<global::PlatPtoCode.PtoLoginInfo, global::PlatPtoCode.PtoLoginReturn>(
        MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_PtoLoginInfo,
        __Marshaller_PtoLoginReturn);

    static readonly Method<global::PlatPtoCode.PtoLogout, global::PlatPtoCode.PtoLoginReturn> __Method_Logout = new Method<global::PlatPtoCode.PtoLogout, global::PlatPtoCode.PtoLoginReturn>(
        MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_PtoLogout,
        __Marshaller_PtoLoginReturn);

    static readonly Method<global::PlatPtoCode.PtoHeart, global::PlatPtoCode.PtoReturn> __Method_HeartReport = new Method<global::PlatPtoCode.PtoHeart, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "HeartReport",
        __Marshaller_PtoHeart,
        __Marshaller_PtoReturn);

    static readonly Method<global::PlatPtoCode.PtoEvent, global::PlatPtoCode.PtoReturn> __Method_AlarmReport = new Method<global::PlatPtoCode.PtoEvent, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmReport",
        __Marshaller_PtoEvent,
        __Marshaller_PtoReturn);

    static readonly Method<global::PlatPtoCode.PtoVerImage, global::PlatPtoCode.PtoVerReturn> __Method_AlarmVerify = new Method<global::PlatPtoCode.PtoVerImage, global::PlatPtoCode.PtoVerReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmVerify",
        __Marshaller_PtoVerImage,
        __Marshaller_PtoVerReturn);

    static readonly Method<global::PlatPtoCode.PtoHostEndpoint, global::PlatPtoCode.PtoReturn> __Method_AlarmRegister = new Method<global::PlatPtoCode.PtoHostEndpoint, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmRegister",
        __Marshaller_PtoHostEndpoint,
        __Marshaller_PtoReturn);

    static readonly Method<global::PlatPtoCode.PtoHostEndpoint, global::PlatPtoCode.PtoReturn> __Method_AlarmUnregister = new Method<global::PlatPtoCode.PtoHostEndpoint, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmUnregister",
        __Marshaller_PtoHostEndpoint,
        __Marshaller_PtoReturn);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PlatPtoCode.PlatPtoCodeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PlatService</summary>
    public abstract class PlatServiceBase
    {
      /// <summary>
      /// 报警事件处置结果
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> AlarmDisposal(global::PlatPtoCode.PtoEventResult request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 登录验证服务
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoLoginReturn> Login(global::PlatPtoCode.PtoLoginInfo request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 退出登录
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoLoginReturn> Logout(global::PlatPtoCode.PtoLogout request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 接收心跳包
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> HeartReport(global::PlatPtoCode.PtoHeart request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> AlarmReport(global::PlatPtoCode.PtoEvent request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 提供第三方验证服务
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoVerReturn> AlarmVerify(global::PlatPtoCode.PtoVerImage request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 注册事件接收
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> AlarmRegister(global::PlatPtoCode.PtoHostEndpoint request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 撤销事件接收
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> AlarmUnregister(global::PlatPtoCode.PtoHostEndpoint request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PlatService</summary>
    public class PlatServiceClient : ClientBase<PlatServiceClient>
    {
      /// <summary>Creates a new client for PlatService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PlatServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PlatService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PlatServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PlatServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PlatServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// 报警事件处置结果
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmDisposal(global::PlatPtoCode.PtoEventResult request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmDisposal(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 报警事件处置结果
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmDisposal(global::PlatPtoCode.PtoEventResult request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmDisposal, null, options, request);
      }
      /// <summary>
      /// 报警事件处置结果
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmDisposalAsync(global::PlatPtoCode.PtoEventResult request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmDisposalAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 报警事件处置结果
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmDisposalAsync(global::PlatPtoCode.PtoEventResult request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmDisposal, null, options, request);
      }
      /// <summary>
      /// 登录验证服务
      /// </summary>
      public virtual global::PlatPtoCode.PtoLoginReturn Login(global::PlatPtoCode.PtoLoginInfo request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Login(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 登录验证服务
      /// </summary>
      public virtual global::PlatPtoCode.PtoLoginReturn Login(global::PlatPtoCode.PtoLoginInfo request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      /// <summary>
      /// 登录验证服务
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoLoginReturn> LoginAsync(global::PlatPtoCode.PtoLoginInfo request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LoginAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 登录验证服务
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoLoginReturn> LoginAsync(global::PlatPtoCode.PtoLoginInfo request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      /// <summary>
      /// 退出登录
      /// </summary>
      public virtual global::PlatPtoCode.PtoLoginReturn Logout(global::PlatPtoCode.PtoLogout request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Logout(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 退出登录
      /// </summary>
      public virtual global::PlatPtoCode.PtoLoginReturn Logout(global::PlatPtoCode.PtoLogout request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Logout, null, options, request);
      }
      /// <summary>
      /// 退出登录
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoLoginReturn> LogoutAsync(global::PlatPtoCode.PtoLogout request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LogoutAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 退出登录
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoLoginReturn> LogoutAsync(global::PlatPtoCode.PtoLogout request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Logout, null, options, request);
      }
      /// <summary>
      /// 接收心跳包
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn HeartReport(global::PlatPtoCode.PtoHeart request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeartReport(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 接收心跳包
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn HeartReport(global::PlatPtoCode.PtoHeart request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HeartReport, null, options, request);
      }
      /// <summary>
      /// 接收心跳包
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> HeartReportAsync(global::PlatPtoCode.PtoHeart request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeartReportAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 接收心跳包
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> HeartReportAsync(global::PlatPtoCode.PtoHeart request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HeartReport, null, options, request);
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmReport(global::PlatPtoCode.PtoEvent request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmReport(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmReport(global::PlatPtoCode.PtoEvent request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmReport, null, options, request);
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmReportAsync(global::PlatPtoCode.PtoEvent request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmReportAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmReportAsync(global::PlatPtoCode.PtoEvent request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmReport, null, options, request);
      }
      /// <summary>
      /// 提供第三方验证服务
      /// </summary>
      public virtual global::PlatPtoCode.PtoVerReturn AlarmVerify(global::PlatPtoCode.PtoVerImage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmVerify(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 提供第三方验证服务
      /// </summary>
      public virtual global::PlatPtoCode.PtoVerReturn AlarmVerify(global::PlatPtoCode.PtoVerImage request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmVerify, null, options, request);
      }
      /// <summary>
      /// 提供第三方验证服务
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoVerReturn> AlarmVerifyAsync(global::PlatPtoCode.PtoVerImage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmVerifyAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 提供第三方验证服务
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoVerReturn> AlarmVerifyAsync(global::PlatPtoCode.PtoVerImage request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmVerify, null, options, request);
      }
      /// <summary>
      /// 注册事件接收
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmRegister(global::PlatPtoCode.PtoHostEndpoint request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmRegister(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 注册事件接收
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmRegister(global::PlatPtoCode.PtoHostEndpoint request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmRegister, null, options, request);
      }
      /// <summary>
      /// 注册事件接收
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmRegisterAsync(global::PlatPtoCode.PtoHostEndpoint request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmRegisterAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 注册事件接收
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmRegisterAsync(global::PlatPtoCode.PtoHostEndpoint request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmRegister, null, options, request);
      }
      /// <summary>
      /// 撤销事件接收
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmUnregister(global::PlatPtoCode.PtoHostEndpoint request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmUnregister(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 撤销事件接收
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmUnregister(global::PlatPtoCode.PtoHostEndpoint request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmUnregister, null, options, request);
      }
      /// <summary>
      /// 撤销事件接收
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmUnregisterAsync(global::PlatPtoCode.PtoHostEndpoint request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmUnregisterAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 撤销事件接收
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmUnregisterAsync(global::PlatPtoCode.PtoHostEndpoint request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmUnregister, null, options, request);
      }
      protected override PlatServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PlatServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(PlatServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AlarmDisposal, serviceImpl.AlarmDisposal)
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_HeartReport, serviceImpl.HeartReport)
          .AddMethod(__Method_AlarmReport, serviceImpl.AlarmReport)
          .AddMethod(__Method_AlarmVerify, serviceImpl.AlarmVerify)
          .AddMethod(__Method_AlarmRegister, serviceImpl.AlarmRegister)
          .AddMethod(__Method_AlarmUnregister, serviceImpl.AlarmUnregister).Build();
    }

  }
  public static class EventService
  {
    static readonly string __ServiceName = "PlatPtoCode.EventService";

    static readonly Marshaller<global::PlatPtoCode.PtoEvent> __Marshaller_PtoEvent = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoEvent.Parser.ParseFrom);
    static readonly Marshaller<global::PlatPtoCode.PtoReturn> __Marshaller_PtoReturn = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PlatPtoCode.PtoReturn.Parser.ParseFrom);

    static readonly Method<global::PlatPtoCode.PtoEvent, global::PlatPtoCode.PtoReturn> __Method_AlarmReport = new Method<global::PlatPtoCode.PtoEvent, global::PlatPtoCode.PtoReturn>(
        MethodType.Unary,
        __ServiceName,
        "AlarmReport",
        __Marshaller_PtoEvent,
        __Marshaller_PtoReturn);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PlatPtoCode.PlatPtoCodeReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of EventService</summary>
    public abstract class EventServiceBase
    {
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::PlatPtoCode.PtoReturn> AlarmReport(global::PlatPtoCode.PtoEvent request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EventService</summary>
    public class EventServiceClient : ClientBase<EventServiceClient>
    {
      /// <summary>Creates a new client for EventService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EventServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EventService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EventServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EventServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EventServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmReport(global::PlatPtoCode.PtoEvent request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmReport(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual global::PlatPtoCode.PtoReturn AlarmReport(global::PlatPtoCode.PtoEvent request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AlarmReport, null, options, request);
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmReportAsync(global::PlatPtoCode.PtoEvent request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AlarmReportAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 上报报警信息
      /// </summary>
      public virtual AsyncUnaryCall<global::PlatPtoCode.PtoReturn> AlarmReportAsync(global::PlatPtoCode.PtoEvent request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AlarmReport, null, options, request);
      }
      protected override EventServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EventServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(EventServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AlarmReport, serviceImpl.AlarmReport).Build();
    }

  }
}
#endregion
